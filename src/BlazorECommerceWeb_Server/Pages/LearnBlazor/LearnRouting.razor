@page "/learnBlazor/learnRouting/{Parameter1}/{Parameter2}"
@page "/learnBlazor/learnRouting/{Parameter1}"
@page "/learnBlazor/learnRouting"
@page "/learnRouting/{Parameter1}/{Parameter2}"
@page "/learnRouting"

@inject NavigationManager _navigationManager

<h3>LearnRouting</h3>

<h4>Parameter 1: @Parameter1</h4>
<h4>Parameter 2: @Parameter2</h4>
<br />
<br />
@* <a href="learnRouting?Param1=Prueba&Param2=Blazor" class="btn btn-primary">Navigate to query parameters</a> *@
@* <NavLink href="learnRouting?Param1=Prueba&Param2=Blazor" class="btn btn-primary">Navigate to query parameters</NavLink> *@
<button class="btn btn-primary" @onclick="NavigateToQueryParam">Navigate to query parameters</button>
@* <button class="btn btn-success" @onclick="LoadParameters">Load parameters</button> *@
<br />
<h3>Query string parameters:</h3>
<h4>Param1: @Param1</h4>
<h4>Param2: @Param2</h4>

@code {
    [SupplyParameterFromQuery]
    [Parameter]
    public string Parameter1 { get; set; } = string.Empty;

    [SupplyParameterFromQuery]
    [Parameter]
    public string Parameter2 { get; set; } = string.Empty;

    [SupplyParameterFromQuery]
    public string Param1 { get; set; } = string.Empty;

    [SupplyParameterFromQuery]
    public string Param2 { get; set; } = string.Empty;

    // private void LoadParameters()
    // {
    //     var absoluteUri = new Uri(_navigationManager.Uri);
    //     var queryParam = System.Web.HttpUtility.ParseQueryString(absoluteUri.Query);
    //     Param1 = queryParam["Param1"];
    //     Param2 = queryParam["Param2"];

    // }

    protected override void OnInitialized()
    {
        _navigationManager.LocationChanged += HandleLocationChanged;
    }

    protected override Task OnParametersSetAsync()
    {
        var absoluteUri = new Uri(_navigationManager.Uri);
        var queryParam = System.Web.HttpUtility.ParseQueryString(absoluteUri.Query);
        if (queryParam != null)
        {
            Param1 = queryParam["Param1"];
            Param2 = queryParam["Param2"];
        }

        return Task.CompletedTask;
    }
    void HandleLocationChanged(object? sender, LocationChangedEventArgs? e)
    {
        OnParametersSetAsync();
        StateHasChanged();
    }

    void NavigateToQueryParam()
    {
        _navigationManager.NavigateTo("learnRouting?Param1=Prueba&Param2=Blazor");
    }


}
