@inject IJSRuntime _jsRuntime

@inject ILogger<_ChildComponent> logger

<div class="mb-1">
    <div class="alert alert-info">@Title</div>
    <div class="alert alert-success">
        @if (DangerChildContent != null)
        {
            <span>@DangerChildContent</span>
        }
        else
        {
            @if (ChildContent != null)
            {
                <span>@ChildContent</span>
            }
            else
            {
                <span>Empty Render Fragment!</span>
            }
        }
    </div>
    <button class="btn btn-danger" @onclick="OnButtonClicked">Button to be clicked</button>
    <br />
    <br />
    <_GrandChildComponent></_GrandChildComponent>
</div>

@code {

    [Parameter]
    public string Title { get; set; } = string.Empty;

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public RenderFragment? DangerChildContent { get; set; }

    [Parameter]
    public EventCallback OnButtonClicked { get; set; }

    private void OnButtonClick(MouseEventArgs e)
    {
        logger.LogInformation("Button clicked!");
        OnButtonClicked.InvokeAsync(e);
    }

    public async Task ToastrSuccess()
    {
        await _jsRuntime.ToastrSuccess("Button clicked!");
    }
}
